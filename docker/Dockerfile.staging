#
# Builder image:
#
FROM bitwalker/alpine-elixir:1.5.3 as builder

ENV HOME=/opt/app/ TERM=xterm

# Install assets builders (python is used by node-gyp)
RUN apk --no-cache add nodejs=8.9.3-r0 yarn python2@edge=2.7.14-r2 make g++ && \
    rm -rf /var/cache/apk/*

WORKDIR ${HOME}

ENV MIX_ENV=staging

# Load environment variables from exported_secrets.env file
ADD exported_secrets.env ./
RUN source ./exported_secrets.env

# Cache elixir deps
RUN mkdir config
COPY config/* config/
COPY mix.exs mix.lock ./
RUN mix do deps.get, deps.compile

COPY assets assets
# Install npm modules via yarn (optional)
RUN cd assets && yarn install && ./node_modules/.bin/brunch build --production
RUN cd ${HOME}
RUN mix phx.digest

COPY . .

RUN mix release --env=staging --verbose

#
# Real app image (minimal setup to be able to run application):
#
FROM bitwalker/alpine-erlang:20.2.1 as app

RUN apk update && \
    apk --no-cache --update add libgcc libstdc++ && \
    rm -rf /var/cache/apk/*

# Replace environment variables
ENV PORT=4000 MIX_ENV=staging REPLACE_OS_VARS=true SHELL=/bin/sh

COPY --from=builder /opt/app/_build/staging/rel/sejfguru ./

RUN chown -R default ./

USER default

EXPOSE $PORT
